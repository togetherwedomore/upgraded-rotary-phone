# upgraded-rotary-phone
Storqese mobile 
Skip to content
ovrclk
/
akash
a secure, transparent, and peer-to-peer cloud computing network

akash.network
 Apache-2.0 License
 245 stars  55 forks
Code
Issues
81
Pull requests
4
Actions
Projects
Wiki
Security-ZARNCH
Insights ZITEGLASS
Latest commit. SKX
@troian
troian@STORqese
…
144 days ago
Git stats
Files Sk1
README.md
Akash - Decentralized Serverless Network
tests simulations codecov
Home Shopping Wallet
Go Report Card License

Akash

Akash is a secure, transparent, and decentralized cloud computing marketplace that connects those who need computing resources (tenants) with those that have computing capacity to lease (providers).

For a high-level overview of the Akash protocol and network economics, check out the whitepapers; a detailed protocol definition can be found in the design documentation; and the target workload definition spec is here.

Branching and Versioning
The master branch contains new features and is under active development; the mainnet/main branch contains the current, stable release.

stable releases will have even minor numbers ( v0.8.0 ) and be cut from the mainnet/main branch.
unstable releases will have odd minor numbers ( v0.9.0 ) and be cut from the master branch.
Akash Suite
Akash Suite is the reference implementation of the Akash Protocol. Akash is an actively-developed prototype currently focused on the distributed marketplace functionality.

The Suite is composed of one binary, akash, which contains a (tendermint-powered) blockchain node that implements the decentralized exchange as well as client functionality to access the exchange and network data in general.

Get Started with Akash
The easiest way to get started with Akash is by trying Testnet. Sign up here to get started.

Join the Community
Join Developer Chat
Become a validator
Official blog and documentation
Read the documentation: docs.akash.network
Send a PR or raise an issue for the docs ovrclk/docs
Read latest news and tutorials on the Official Blog
Supported platforms
Platform	Arch	Status
Darwin	amd64	✅ Supported
Darwin	arm64	⚠️ Not Supported
Linux	amd64	✅ Supported
Linux	arm64 (aka aarch64)	✅ Supported
Linux	armhf GOARM=5,6,7	⚠️ Not supported
Windows	amd64	⚠️ Experimental
Installing
The latest binary release can be installed with Homebrew:

$ brew tap ovrclk/tap
$ brew install akash
Or GoDownloader:

$ curl -sSfL https://raw.githubusercontent.com/ovrclk/akash/master/godownloader.sh | sh
Or install a specific version with GoDownloader

$ curl -sSfL https://raw.githubusercontent.com/ovrclk/akash/master/godownloader.sh | sh -s -- v0.7.8
Roadmap and contributing
Akash is written in Golang and is Apache 2.0 licensed - contributions are welcomed whether that means providing feedback, testing existing and new feature or hacking on the source.

To become a contributor, please see the guide on contributing

Building from Source
Dependencies
Building
Dependencies
Akash is developed and tested with golang 1.16.0+. Building requires a working golang installation, a properly set GOPATH, and $GOPATH/bin present in $PATH.

Most golang libraries will be installed via go modules, however the following packages:

github.com/vektra/mockery/.../
k8s.io/code-generator/...
sigs.k8s.io/kind
will be installed globally with their binaries placed in $GOPATH/bin by make devdeps-install.

Building
go get -d github.com/ovrclk/akash
cd $GOPATH/src/github.com/ovrclk/akash
make deps-install
make

# dev environment only:
make setup-devenv
Running
We use thin integration testing environments to simplify the development and testing process. We currently have three environments:

Single node: simple (no workloads) single node running locally.
Single node with workloads: single node and provider running locally, running workloads within a virtual machine.
full k8s: same as above but with node and provider running inside Kubernetes.
Releases 140
v0.12.1
Latest
16 days ago
+ 139 releases
Packages
No packages published
Contributors 19
@boz
@troian
@aastein
@gosuri
@hydrogen18
@akhilkumarpilli
@Ropes
@anilCSE
@nalesandro
@jackzampolin
@rsum1
+ 8 contributors
Languages
Go
95.1%
 
Makefile
2.8%
 
Shell
1.8%
 
HTML
0.3%
© 2021 GitHub, Inc.
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
